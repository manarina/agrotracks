# Generated by Django 5.1 on 2024-08-11 13:37

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de commune')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de commune')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Plantation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomPlantation', models.CharField(help_text='Nom de plantation', max_length=255)),
                ('typePlantation', models.CharField(choices=[('agroforesterie', 'AgroForesterie'), ('mangroves', 'Mangroves'), ('agricultures', 'Agricultures'), ('permaculture', 'Permaculture')], max_length=255, verbose_name='Type de plantation')),
                ('etat', models.CharField(choices=[('en preparation', 'En preparation'), ('en germination', 'En germination'), ('en croissance', 'En Croissance'), ('semee', 'Semee'), ('en repos', 'En repos'), ('endommagee', 'Endommagee'), ('abandonnee', 'Abandonnee'), ('replantee', 'Replantee')], max_length=255, verbose_name='Etats de plantation')),
                ('datePlantation', models.DateField(auto_now_add=True, verbose_name='Date de plantation')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la plantation')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de la plantation')),
            ],
            options={
                'ordering': ['datePlantation'],
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('admin', 'Admin'), ('agriculteur', 'Agriculteur'), ('chercheur', 'Chercheur')], default='admin', max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de district')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de district')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='districts_commune', to='plants.commune', verbose_name='Commune')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='PhotoGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Description', max_length=255)),
                ('photos', models.ImageField(blank=True, null=True, upload_to='uploads/photos')),
                ('videos', models.FileField(blank=True, null=True, upload_to='uploads/videos')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la suiuvi')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de la suivi')),
                ('plantations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photoGallerys_Plantation', to='plants.plantation', verbose_name='Plantation')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Pepiniere',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantiteStock', models.IntegerField(blank=True, default=0, null=True, verbose_name='Quantite Stock')),
                ('capaciteProd', models.IntegerField(blank=True, default=0, null=True, verbose_name='Capacite de Production')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la pepiniere')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de la pepiniere')),
                ('typePlants', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pepinieres_Plantation', to='plants.plantation', verbose_name='TypePlants')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='GuidePlantation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text='Titre', max_length=255)),
                ('contenu', models.CharField(help_text='Contenu', max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la pepiniere')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de la pepiniere')),
                ('plantations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='guidePlantations_Plantation', to='plants.plantation', verbose_name='Plantation')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Region',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de region')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de region')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='regions_district', to='plants.district', verbose_name='District')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='SuiviPlantation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hauteur', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Hauteur de plantation')),
                ('diametre', models.FloatField(blank=True, default=0.0, null=True, verbose_name='Diametre de plantation')),
                ('observation', models.CharField(help_text='Observation', max_length=255)),
                ('dateSuivi', models.DateField(auto_now_add=True, verbose_name='Date de suivi de plantation')),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de la suiuvi')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de la suivi')),
                ('plantations', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suiviPlantations_Plantation', to='plants.plantation', verbose_name='Plantation')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=255)),
                ('prenom', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('avatar', models.ImageField(default='uploads/avatars/avatar1.jpg', upload_to='uploads/avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='Les groupes dont fait partie cet utilisateur. Celui-ci obtient tous les droits de tous les groupes auxquels il appartient.', related_name='custom_users', related_query_name='custom_user', to='auth.group', verbose_name='groupes')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='plants.role')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissions spécifiques à cet utilisateur.', related_name='custom_users', related_query_name='custom_user', to='auth.permission', verbose_name='permissions de l’utilisateur')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Rapport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(help_text='Titre', max_length=255)),
                ('contenu', models.CharField(help_text='Contenu', max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de rapport')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de rapport')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rapports_utilisateur', to='plants.user', to_field='email', verbose_name='Utilisateur')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Forum',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.CharField(help_text='Topic', max_length=255)),
                ('message', models.CharField(help_text='Message', max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de forum')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de forum')),
                ('utilisateur', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='forums_utilisateur', to='plants.user', to_field='email', verbose_name='Utilisateur')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ZonePlantation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localisation', models.CharField(max_length=255)),
                ('date_creation', models.DateTimeField(auto_now_add=True, help_text='Date de création de zone plantation')),
                ('date_modification', models.DateTimeField(auto_now=True, help_text='Date de dernière modification de zone plantation')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zonePlantations_commune', to='plants.commune', verbose_name='Commune')),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zonePlantations_district', to='plants.district', verbose_name='District')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zonePlantations_region', to='plants.region', verbose_name='Region')),
            ],
            options={
                'ordering': ['date_creation'],
            },
        ),
        migrations.AddField(
            model_name='plantation',
            name='emplacements',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plantations_zonePlantation', to='plants.zoneplantation', verbose_name='Emplacements'),
        ),
    ]
